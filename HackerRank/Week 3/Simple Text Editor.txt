#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAXLEN 1000000

typedef struct {
    char type;
    char *data;
} Operation;

int main() {
    int Q;
    scanf("%d", &Q);

    char *S = (char *)calloc(MAXLEN, sizeof(char));
    int len = 0;

    Operation *stack = (Operation *)malloc(Q * sizeof(Operation));
    int top = -1;

    for (int i = 0; i < Q; i++) {
        int t;
        scanf("%d", &t);

        if (t == 1) { // append
            char temp[100000];
            scanf("%s", temp);
            int l = strlen(temp);

            strcpy(S + len, temp);
            len += l;

            stack[++top].type = '1';
            stack[top].data = strdup(temp);
        } 
        else if (t == 2) { // delete
            int k;
            scanf("%d", &k);

            char *deleted = (char *)malloc((k + 1) * sizeof(char));
            strncpy(deleted, S + len - k, k);
            deleted[k] = '\0';

            len -= k;
            S[len] = '\0';

            stack[++top].type = '2';
            stack[top].data = deleted;
        } 
        else if (t == 3) { // print
            int k;
            scanf("%d", &k);
            printf("%c\n", S[k - 1]);
        } 
        else if (t == 4) { // undo
            Operation last = stack[top--];
            if (last.type == '1') {
                int l = strlen(last.data);
                len -= l;
                S[len] = '\0';
                free(last.data);
            } else if (last.type == '2') {
                strcpy(S + len, last.data);
                len += strlen(last.data);
                free(last.data);
            }
        }
    }

    free(S);
    free(stack);
    return 0;
}
